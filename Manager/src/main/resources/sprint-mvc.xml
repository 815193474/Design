<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.aitew"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<mvc:resources mapping="/website/**" location="/website/" />
	<mvc:resources mapping="/static/**" location="/static/" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 防止使用springMVC进行文件下载时文件损坏 -->
	<bean id="arrayHttpMessageConverter"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	<!-- 用于将对象转换为 JSON -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- Jackson 是Spring 自带的功能 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>application/xml;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value>
				<value>text/xml;charset=UTF-8</value>
				<value>text/javascript;charset=UTF-8</value>
			</list>
		</property>
	</bean> 
	
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="arrayHttpMessageConverter" />
			<ref bean="stringHttpMessageConverter" />
			<ref bean="mappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--配置拦截器 拦截除了exceptUrls内的所有请求-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**" />
          	<mvc:exclude-mapping path="/list/login"></mvc:exclude-mapping>

          	<mvc:exclude-mapping path="/login/TYPE"></mvc:exclude-mapping>
          	<mvc:exclude-mapping path="/util/**"></mvc:exclude-mapping>

          	<mvc:exclude-mapping path="/static/**"></mvc:exclude-mapping>
            <bean class="com.aitew.Manager.controller.LoginInterceptor"></bean>    <!-- 自定义拦截器路径 -->
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
   

</beans>